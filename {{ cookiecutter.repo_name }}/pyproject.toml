[tool.poetry]
name = "test-ghilston-python-cookiecutter"
version = "0.1.0"
description = "test-ghilston-python-cookiecutter"
authors = ["GregHilston <Gregory.Hilston@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
loguru = "^0.5.3"

[tool.poetry.dev-dependencies]
black = "^21.5b1"
pytest = "^6.2.4"
pylint = "^2.8.2"
mypy = "^0.812"
bandit = "^1.7.0"
safety = "^1.10.3"
dodgy = "^0.2.1"
isort = "^5.8.0"
coverage = "^5.5"
invoke = "^1.5.0"
pytest-cov = "^2.12.0"
flake8 = "^3.9.2"
poetry-githooks = "^1.1.4"
pyinvoke = "^1.0.4"
pdbpp = "^0.10.3"
loguru = "^0.5.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# A good example of a pyproject can be found from home-assistant here: https://github.com/home-assistant/core/blob/dev/pyproject.toml

[tool.black]
line-length = 120

[tool.isort]
# read about the settings available here: https://github.com/PyCQA/isort/wiki/isort-Settings

# while we can use the `profile = black` here: https://github.com/PyCQA/isort/blob/main/isort/profiles.py
# I don't love the line_length amount so I'm manually defining these

# defines a mode for how multi line outputs will perform
# one can read more about these here https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes/
# i like the "vertical hanging indent"
multi_line_output = 3

# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true

# isort will combine as imports on the same line within for import statements. By default isort forces all as imports to display on their own lines.
combine_as_imports = true

[tool.pylint.MASTER]
init-hook='import sys; sys.path.append("~/Git/ghilston-python-cookiecutter")'

# per this thread, https://github.com/PyCQA/pylint/issues/3181 ,we must name this section this way

# Good variable names which should always be accepted, separated by a comma
good-names= [
    "i",
    "j",
    "k",
    "x",
    "y",
    "f",
    "foo",
    "bar"
]

# enables inspecting types defined for functions, methods and constructors
load-plugins = [
    "pylint.extensions.docparams"
]

max-line-length = 120

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
norecursedirs = [
    ".git"
]

[tool.githooks]
pre-commit = "invoke magic"
