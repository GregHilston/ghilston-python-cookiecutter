version: 2 # use CircleCI 2.0
jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps are run
    working_directory: ~/circleci-demo-python
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.8.6
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - restore_cache:
          keys: deps-{{ checksum "poetry.lock" }}
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run:
          command: |
            cd "{{ cookiecutter.repo_name }}" && poetry install
      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
      - run:
          command: |
            cd "{{ cookiecutter.repo_name }}" && poetry run invoke lint
      - run:
          command: |
            cd "{{ cookiecutter.repo_name }}" &&  poetry run invoke type-check
      - run:
          command: |
            cd "{{ cookiecutter.repo_name }}" && poetry run invoke circle-ci-test
      - run:
          command: |
            cd "{{ cookiecutter.repo_name }}" && poetry run invoke circle-ci-security
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
         path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
          destination: tr1
